/**
 * Last Post Tracker
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å–µ—â–µ–Ω–Ω—ã–π –ø–æ—Å—Ç –∏ –≤—ã–¥–µ–ª—è–µ—Ç –µ–≥–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 */

class LastPostTracker {
    constructor() {
        this.storageKey = 'vpn-guru-last-post';
        this.lastPostUrl = null;
        this.init();
    }

    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Å—Ç–∞
        if (this.isPostPage()) {
            this.saveCurrentPost();
        }
        
        // –ï—Å–ª–∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –≤—ã–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç
        if (this.isHomePage()) {
            this.highlightLastPost();
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.addEventListeners();
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    addEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
        const clearButton = document.getElementById('clear-last-post');
        if (clearButton) {
            clearButton.addEventListener('click', () => {
                this.clearLastPost();
                this.showNotification('–ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–µ—â–µ–Ω–∏–π –æ—á–∏—â–µ–Ω–∞', 'success');
                
                // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–æ–≤
                const lastVisitedPosts = document.querySelectorAll('.last-visited-post');
                lastVisitedPosts.forEach(post => {
                    post.classList.remove('last-visited-post');
                    const indicator = post.querySelector('.last-visited-indicator');
                    if (indicator) {
                        indicator.remove();
                    }
                });
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ—Å—Ç–æ–≤ (–¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX)
        document.addEventListener('click', (e) => {
            const postCard = e.target.closest('.post-card');
            if (postCard) {
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –¥–ª—è –ª—É—á—à–µ–≥–æ UX
                setTimeout(() => {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–∫–µ
                    this.savePostClick(postCard);
                }, 100);
            }
        });
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–∫–µ –Ω–∞ –ø–æ—Å—Ç
     */
    savePostClick(postCard) {
        const href = postCard.getAttribute('data-href');
        if (href) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–Ω—É–ª –Ω–∞ –ø–æ—Å—Ç
            try {
                const clickData = {
                    url: href,
                    clickedAt: Date.now()
                };
                localStorage.setItem('vpn-guru-post-click', JSON.stringify(clickData));
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª–∏–∫–∞:', error);
            }
        }
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     */
    showNotification(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.innerHTML = `
            <span class="notification-icon">${this.getNotificationIcon(type)}</span>
            <span class="notification-text">${message}</span>
            <button class="notification-close">√ó</button>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        Object.assign(notification.style, {
            position: 'fixed',
            top: '20px',
            right: '20px',
            padding: '1rem 1.5rem',
            background: this.getNotificationBackground(type),
            color: '#ffffff',
            borderRadius: '12px',
            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',
            zIndex: '10000',
            display: 'flex',
            alignItems: 'center',
            gap: '0.75rem',
            fontSize: '0.9rem',
            fontWeight: '500',
            maxWidth: '400px',
            animation: 'notificationSlideIn 0.3s ease-out'
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
        document.body.appendChild(notification);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        const closeBtn = notification.querySelector('.notification-close');
        closeBtn.addEventListener('click', () => {
            notification.remove();
        });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            if (notification.parentNode) {
                notification.style.animation = 'notificationSlideOut 0.3s ease-out';
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.remove();
                    }
                }, 300);
            }
        }, 4000);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    getNotificationIcon(type) {
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è'
        };
        return icons[type] || icons.info;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ñ–æ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    getNotificationBackground(type) {
        const backgrounds = {
            success: 'linear-gradient(135deg, #10b981, #059669)',
            error: 'linear-gradient(135deg, #ef4444, #dc2626)',
            warning: 'linear-gradient(135deg, #f59e0b, #d97706)',
            info: 'linear-gradient(135deg, #3b82f6, #2563eb)'
        };
        return backgrounds[type] || backgrounds.info;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Å—Ç–∞
     */
    isPostPage() {
        return window.location.pathname.includes('/posts/') && 
               window.location.pathname !== '/posts/';
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     */
    isHomePage() {
        return window.location.pathname === '/' || 
               window.location.pathname === '/index.html';
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –ø–æ—Å—Ç –≤ localStorage
     */
    saveCurrentPost() {
        const currentUrl = window.location.pathname;
        const postTitle = document.querySelector('h1')?.textContent || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ—Å—Ç';
        const postDate = document.querySelector('.post-date')?.textContent || '';
        
        const postData = {
            url: currentUrl,
            title: postTitle,
            date: postDate,
            timestamp: Date.now()
        };

        try {
            localStorage.setItem(this.storageKey, JSON.stringify(postData));
            this.lastPostUrl = currentUrl;
            console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç:', postData);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞:', error);
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å–µ—â–µ–Ω–Ω–æ–º –ø–æ—Å—Ç–µ
     */
    getLastPost() {
        try {
            const data = localStorage.getItem(this.storageKey);
            return data ? JSON.parse(data) : null;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å—Ç–µ:', error);
            return null;
        }
    }

    /**
     * –í—ã–¥–µ–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å–µ—â–µ–Ω–Ω—ã–π –ø–æ—Å—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     */
    highlightLastPost() {
        const lastPost = this.getLastPost();
        if (!lastPost) return;

        // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ—Å—Ç–∞ –ø–æ URL
        const postCard = document.querySelector(`[data-href="${lastPost.url}"]`);
        if (!postCard) return;

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
        postCard.classList.add('last-visited-post');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π"
        this.addLastVisitedIndicator(postCard, lastPost);

        console.log('–í—ã–¥–µ–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç:', lastPost.title);
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π"
     */
    addLastVisitedIndicator(postCard, lastPost) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        if (postCard.querySelector('.last-visited-indicator')) return;

        const indicator = document.createElement('div');
        indicator.className = 'last-visited-indicator';
        indicator.innerHTML = `
            <span class="indicator-icon">üëÅÔ∏è</span>
            <span class="indicator-text">–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π</span>
        `;

        // –í—Å—Ç–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –Ω–∞—á–∞–ª–æ –∫–∞—Ä—Ç–æ—á–∫–∏
        const postCardContent = postCard.querySelector('.post-card-content');
        if (postCardContent) {
            postCardContent.insertBefore(indicator, postCardContent.firstChild);
        }
    }

    /**
     * –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å—Ç–µ
     */
    clearLastPost() {
        try {
            localStorage.removeItem(this.storageKey);
            this.lastPostUrl = null;
            console.log('–î–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø–æ—Å—Ç–µ –æ—á–∏—â–µ–Ω—ã');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–µ—â–µ–Ω–∏–π
     */
    getVisitStats() {
        try {
            const data = localStorage.getItem(this.storageKey);
            if (!data) return null;
            
            const postData = JSON.parse(data);
            const now = Date.now();
            const timeDiff = now - postData.timestamp;
            
            return {
                ...postData,
                timeAgo: this.formatTimeAgo(timeDiff)
            };
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            return null;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏—è
     */
    formatTimeAgo(milliseconds) {
        const seconds = Math.floor(milliseconds / 1000);
        const minutes = Math.floor(seconds / 60);
        const hours = Math.floor(minutes / 60);
        const days = Math.floor(hours / 24);

        if (days > 0) return `${days} –¥–Ω. –Ω–∞–∑–∞–¥`;
        if (hours > 0) return `${hours} —á. –Ω–∞–∑–∞–¥`;
        if (minutes > 0) return `${minutes} –º–∏–Ω. –Ω–∞–∑–∞–¥`;
        return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    window.lastPostTracker = new LastPostTracker();
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = LastPostTracker;
}
